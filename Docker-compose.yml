
########################################################################################

version: "3.8"

services:
  # 1. Eureka Service (Service Discovery)
  eureka-service:
    container_name: eureka-service
    build:
      context: ./eureka-service
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservice-net

  # 2. API Gateway (Spring Cloud Gateway)
  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "9000:9000"
    depends_on:
      - eureka-service
      - redis
    environment:
      EUREKA_INSTANCE_HOSTNAME: api-gateway
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      SPRING_ZIPKIN_BASE-URL: http://zipkin:9411
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
    networks:
      - microservice-net

  # 3. Auth Service (Xác thực người dùng)
  auth-service:
    container_name: auth-service
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-service
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/auth_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: auth-service
    networks:
      - microservice-net

  # 4. Product Service (Quản lý sản phẩm)
  product-service:
    container_name: product-service
    build:
      context: ./product-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-service
      - mysql
      - minio
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/musicstore?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: product-service
      MINIO_URL: http://minio:9000
      MINIO_ACCESS_KEY: minioadmin
      MINIO_SECRET_KEY: minioadmin
      MINIO_BUCKET_NAME: musicstore
    networks:
      - microservice-net

  # 5. Cart Service (Quản lý giỏ hàng)
  cart-service:
    container_name: cart-service
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    ports:
      - "8085:8085"
    depends_on:
      - eureka-service
      - redis
    environment:
      SPRING_APPLICATION_NAME: cart-service
      SERVER_PORT: 8085
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD:
      SPRING_DATA_REDIS_TIMEOUT: 60s
      SPRING_DATA_REDIS_DATABASE: 0
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: cart-service
    networks:
      - microservice-net

  # 7. Inventory Service (Quản lý tồn kho)
  inventory-service:
    container_name: inventory-service
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - eureka-service
      - mysql
    environment:
      SPRING_APPLICATION_NAME: inventory-service
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/inventory_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: inventory-service
    networks:
      - microservice-net

  # 8. User Service (Quản lý thông tin cá nhân)
  user-service:
    container_name: user-service
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - eureka-service
      - mysql
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/user_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: password
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: user-service
    networks:
      - microservice-net

  # 9. MySQL Database
  mysql:
    container_name: mysql
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init-scripts:/docker-entrypoint-initdb.d
    networks:
      - microservice-net

  # 10. MinIO (Lưu trữ ảnh sản phẩm)
  minio:
    container_name: minio
    image: quay.io/minio/minio
    ports:
      - "9001:9000"  # Đổi mapping từ 9000:9000 thành 9001:9000
      - "9090:9090"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    command: server /data --console-address ":9090"
    volumes:
      - minio_data:/data
    networks:
      - microservice-net

  # 11. Redis (Caching & Rate Limiting)
  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - microservice-net
  # 12. Order Service
  order-service:
    container_name: order-service
    build:
      context: ./order-service
      dockerfile: Dockerfile
    ports:
      - "8086:8086"
    depends_on:
      - eureka-service
      - postgres
      - kafka
    environment:
      SPRING_APPLICATION_NAME: order-service
      SERVER_PORT: 8086
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/order_db
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.postgresql.Driver
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_KAFKA_CONSUMER_GROUP_ID: order-group
      SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: earliest
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://eureka-service:8761/eureka
      EUREKA_INSTANCE_HOSTNAME: order-service
    networks:
      - microservice-net

  # 13. PostgreSQL
  postgres:
    container_name: postgres
    image: postgres:17
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: order_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - microservice-net

  # 14. Kafka Broker
  kafka:
    image: confluentinc/cp-kafka:7.2.2
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - microservice-net

  # 15. Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.2
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - microservice-net

volumes:
  redis-data:
    driver: local
  mysql_data:
  minio_data:
  postgres_data:

networks:
  microservice-net:

#Eureka Dashboard: http://localhost:8761
#API Gateway: http://localhost:9000
#Zipkin Tracing: http://localhost:9411
#Prometheus Metrics: http://localhost:9090
#Grafana UI: http://localhost:3000 (user: admin / pass: admin)
#MinIO UI: http://localhost:9090 (user: minioadmin, pass: minioadmin)
